(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{578:function(n,s,t){"use strict";t.r(s);var a=t(9),e=Object(a.a)({},(function(){var n=this,s=n.$createElement,t=n._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"原型定义"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型定义"}},[n._v("#")]),n._v(" 原型定义")]),n._v(" "),t("p",[n._v("原型是function对象的一个属性，它定义了构造函数制造出的对象的公共祖先。通过该构造函数产生的对象，可以继承该原型的属性和方法。原型也是对象。")]),n._v(" "),t("p",[n._v("对象如何查看原型 -> 隐式属性 "),t("code",[n._v("__proto__")])]),n._v(" "),t("p",[n._v("对象如何查看对象的构造函数 -> "),t("code",[n._v("constructor")])]),n._v(" "),t("h2",{attrs:{id:"从属关系"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从属关系"}},[n._v("#")]),n._v(" 从属关系")]),n._v(" "),t("p",[t("code",[n._v("prototype")]),n._v(" -> 函数的一个属性：普通对象 {}")]),n._v(" "),t("p",[t("code",[n._v("__proto__")]),n._v(" -> 对象Object的一个属性：普通对象 {}")]),n._v(" "),t("p",[n._v("对象的"),t("code",[n._v("__proto__")]),n._v("保存着该对象的构造函数的"),t("code",[n._v("prototype")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("function Person(){\n\n}\nconsole.log(Person.prototype);\n\nconst person = new Person();\nconsole.log(person.__proto__);\n\nconsole.log(person.__proto__ === Person.prototype); // true\n\nconsole.log(Person.prototype.__proto__ === Object.prototype); // true\n\nconsole.log(Object.prototype.__proto__); // null\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("h2",{attrs:{id:"利用原型特点和概念-可以提取共有属性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#利用原型特点和概念-可以提取共有属性"}},[n._v("#")]),n._v(" 利用原型特点和概念，可以提取共有属性")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("// 共有属性\nCar.prototype.lang = 4900;\nCar.prototype.height = 1400;\nCar.prototype.carName = 'BMW';\nfunction Car(color, owner){\n  this.owner = owner;\n  this.color = color;\n}\n\nconst car = new Car('green', '李四');\nconst car1 = new Car('red', '张三');\nconsole.log(car, car1);\nconsole.log(car.lang, car1.lang); // 4900 4900\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br")])]),t("h2",{attrs:{id:"原型链"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[n._v("#")]),n._v(" 原型链")]),n._v(" "),t("p",[n._v("原型链的链接点是 "),t("code",[n._v("__proto__")])]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("Grand.prototype.lastName = 'Liu';\nfunction Grand(){\n\n}\nconst grand = new Grand();\nFather.prototype = grand;\nfunction Father(){\n  this.name = 'xuming';\n}\nconst father = new Father();\nSon.prototype = father;\nfunction Son(){\n  this.hobbit = 'smoke';\n}\nconst son = new Son();\n\nconsole.log(son.hobbit); // smoke\nconsole.log(son.name); // xuming\nconsole.log(son.lastName); // Liu\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br"),t("span",{staticClass:"line-number"},[n._v("13")]),t("br"),t("span",{staticClass:"line-number"},[n._v("14")]),t("br"),t("span",{staticClass:"line-number"},[n._v("15")]),t("br"),t("span",{staticClass:"line-number"},[n._v("16")]),t("br"),t("span",{staticClass:"line-number"},[n._v("17")]),t("br"),t("span",{staticClass:"line-number"},[n._v("18")]),t("br"),t("span",{staticClass:"line-number"},[n._v("19")]),t("br")])]),t("h2",{attrs:{id:"object-create-原型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#object-create-原型"}},[n._v("#")]),n._v(" Object.create(原型);")]),n._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v("const obj = {\n  name: 'liu'\n}\nconst obj1 = Object.create(obj); // obj1的原型是obj\n\nPerson.prototype.name = 'liu';\nfunction Person(){\n\n}\nconst person = Object.create(Person.prototype); // person的原型是Person.prototype\n\nconst obj2 = Object.create(null); //创建无原型对象 没有toString()\n")])]),n._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[n._v("1")]),t("br"),t("span",{staticClass:"line-number"},[n._v("2")]),t("br"),t("span",{staticClass:"line-number"},[n._v("3")]),t("br"),t("span",{staticClass:"line-number"},[n._v("4")]),t("br"),t("span",{staticClass:"line-number"},[n._v("5")]),t("br"),t("span",{staticClass:"line-number"},[n._v("6")]),t("br"),t("span",{staticClass:"line-number"},[n._v("7")]),t("br"),t("span",{staticClass:"line-number"},[n._v("8")]),t("br"),t("span",{staticClass:"line-number"},[n._v("9")]),t("br"),t("span",{staticClass:"line-number"},[n._v("10")]),t("br"),t("span",{staticClass:"line-number"},[n._v("11")]),t("br"),t("span",{staticClass:"line-number"},[n._v("12")]),t("br")])]),t("h2",{attrs:{id:"tostring"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#tostring"}},[n._v("#")]),n._v(" toString()")]),n._v(" "),t("p",[n._v("undefined.toString() // 报错, 是原始值，没有原型所以没有toString()")]),n._v(" "),t("p",[n._v("null.toString() // 报错, 是原始值，没有原型所以没有toString()")]),n._v(" "),t("p",[n._v("document.write(obj) // 会先调用toString()再输出到页面，如果自身没有toString()就从原型上找")])])}),[],!1,null,null,null);s.default=e.exports}}]);